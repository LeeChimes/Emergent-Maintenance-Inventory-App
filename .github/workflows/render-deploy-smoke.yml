name: "Render: deploy and smoke"

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL for backend"
        required: false
        default: "https://chimes-backend.onrender.com"
      run_seed:
        description: "Run data seed after deploy (dev only)"
        required: false
        default: "false"
      wait_timeout_seconds:
        description: "Max seconds to wait for service to be healthy"
        required: false
        default: "600"

jobs:
  verify:
    name: "Deploy and smoke test"
    runs-on: ubuntu-latest

    steps:
      - name: "Set BASE_URL (manual dispatch)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "BASE_URL=${{ github.event.inputs.base_url }}" >> "$GITHUB_ENV"
          echo "WAIT_TIMEOUT_SECONDS=${{ github.event.inputs.wait_timeout_seconds }}" >> "$GITHUB_ENV"

      - name: "Set BASE_URL (push to main)"
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          echo "BASE_URL=https://chimes-backend.onrender.com" >> "$GITHUB_ENV"
          echo "WAIT_TIMEOUT_SECONDS=600" >> "$GITHUB_ENV"

      - name: "Maybe trigger Render deploy (no secrets in if)"
        run: |
          # Check if hook URL is configured
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" ]; then
            echo "No RENDER_DEPLOY_HOOK_URL secret configured; skipping deploy."
            exit 0
          fi
          
          # Always deploy on workflow_dispatch
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual workflow dispatch; triggering Render deploy…"
            curl -fsS -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
            exit 0
          fi
          
          # For push events, check for [skip deploy] flag
          if [ "${{ github.event_name }}" = "push" ]; then
            commit_msg="${{ github.event.head_commit.message }}"
            # Case-insensitive check for [skip deploy]
            if echo "$commit_msg" | grep -qi '\[skip deploy\]'; then
              echo "Skip flag [skip deploy] found in commit message; not triggering deploy."
              exit 0
            else
              echo "Push to main without skip flag; triggering Render deploy…"
              curl -fsS -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
              exit 0
            fi
          fi
          
          echo "Unknown event type; skipping deploy."

      - name: "Wait for service to be healthy"
        run: |
          echo "Waiting for $BASE_URL for up to ${WAIT_TIMEOUT_SECONDS}s..."
          end=$((SECONDS + WAIT_TIMEOUT_SECONDS))
          until curl -fsS "$BASE_URL/" > /dev/null; do
            if [ $SECONDS -ge $end ]; then
              echo "Timed out after ${WAIT_TIMEOUT_SECONDS}s"
              exit 1
            fi
            sleep 5
          done

      - name: "Seed dev data (manual + opted-in)"
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_seed == 'true' }}
        run: |
          curl -fsS "$BASE_URL/api/dev/seed-basic" || true

      - name: "Smoke: GET /"
        run: curl -fsS "$BASE_URL/" | head -c 200

      - name: "Smoke: GET /api/tools"
        run: curl -fsS "$BASE_URL/api/tools" | head -c 200

      - name: "Smoke: GET /api/materials"
        run: curl -fsS "$BASE_URL/api/materials" | head -c 200
