name: "Render: deploy and smoke"

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL for backend"
        required: false
        default: "https://chimes-backend.onrender.com"
      run_seed:
        description: "Run data seed after deploy (dev only)"
        required: false
        default: "false"
      wait_timeout_seconds:
        description: "Max seconds to wait for service to be healthy"
        required: false
        default: "600"

jobs:
  verify:
    name: Deploy (manual only) and smoke test
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

    steps:
      - name: Set BASE_URL (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "BASE_URL=${{ github.event.inputs.base_url || 'https://chimes-backend.onrender.com' }}" >> "$GITHUB_ENV"
          echo "WAIT_TIMEOUT_SECONDS=${{ github.event.inputs.wait_timeout_seconds || '600' }}" >> "$GITHUB_ENV"

      - name: Set BASE_URL (push to main)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          echo "BASE_URL=https://chimes-backend.onrender.com" >> "$GITHUB_ENV"
          echo "WAIT_TIMEOUT_SECONDS=600" >> "$GITHUB_ENV"

      - name: Trigger Render deploy (manual runs only)
        if: ${{ github.event_name == 'workflow_dispatch' && env.RENDER_DEPLOY_HOOK_URL != '' }}
        run: |
          curl -fsS -X POST "$RENDER_DEPLOY_HOOK_URL"

      - name: Wait for service to be healthy
        run: |
          echo "Waiting for $BASE_URL for up to ${WAIT_TIMEOUT_SECONDS}s..."
          end=$((SECONDS + WAIT_TIMEOUT_SECONDS))
          until curl -fsS "$BASE_URL/" > /dev/null; do
            if [ $SECONDS -ge $end ]; then
              echo "Timed out after ${WAIT_TIMEOUT_SECONDS}s"
              exit 1
            fi
            sleep 5
          done

      - name: Seed dev data (manual + opted-in)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_seed == 'true' }}
        run: |
          curl -fsS "$BASE_URL/api/dev/seed-basic" || true

      - name: "Smoke: GET /"
        run: curl -fsS "$BASE_URL/" | head -c 200

      - name: "Smoke: GET /api/tools"
        run: curl -fsS "$BASE_URL/api/tools" | head -c 200

      - name: "Smoke: GET /api/materials"
        run: curl -fsS "$BASE_URL/api/materials" | head -c 200